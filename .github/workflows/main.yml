name: Publish Python Package

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install bump2version
        run: pip install bump2version

      - name: Bump version
        id: bump_version
        run: |
          if git log -1 --pretty=%B | grep -q 'bump minor'; then
            bump2version minor --current-version $(python setup.py --version) setup.py
          elif git log -1 --pretty=%B | grep -q 'bump major'; then
            bump2version major --current-version $(python setup.py --version) setup.py
          else
            echo "No version bump needed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        if: steps.bump_version.outputs.version != ''
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git push origin HEAD:main

  build-and-publish:
    needs: bump-version
    if: steps.bump_version.outputs.version != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install build tools
        run: |
          pip install setuptools wheel twine

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.bump_version.outputs.version }}
          release_name: Release ${{ steps.bump_version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to PyPI
        run: |
          twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
